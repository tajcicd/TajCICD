name: TajCICD Workflow
on:
  pull_request:
    branches:
      - main
jobs:
  build:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
      - name: set up JDK 11
        uses: actions/setup-java@v3
        with:
          java-version: "11"
          distribution: temurin
          cache: gradle
      - name: Grant execute permission for gradlew
        run: chmod +x gradlew
      - name: Build with Gradle
        run: ./gradlew build --stacktrace

  lint-check:
    name: Lint
    runs-on: ubuntu-latest
    steps:
      - name: CheckoutCode
        uses: actions/checkout@v2
      - name: Lint check
        run: ./gradlew lint
      - name: Generate lint report
        uses: actions/upload-artifact@v2
        with:
          name: lint_report.html
          path: app/build/reports/lint-results-debug.html

  generate-apk:
    name: Ô∏èGenerate APK
    needs:
      - build
      - lint-check
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v2
      - name: Set up JDK 11
        uses: actions/setup-java@v1
        with:
          java-version: "11"
      - name: Build debug apk
        run: ./gradlew assembleDebug --stacktrace
      - name: Upload debug apk
        uses: actions/upload-artifact@v1
        with:
          name: TajCICD
          path: app/build/outputs/apk/debug/app-debug.apk



  create-release: # Job to create a new github release and upload the generated apk
    name: üéâ Create Release
    needs: [ generate-apk ]
    runs-on: ubuntu-latest
    steps:

      - name: Download APK from build
        uses: actions/download-artifact@v1
        with:
          name: Android-CI-CD

      - name: Create Release
        id: create_release
        uses: actions/create-release@v1
        env:
          GITHUB_TOKEN: ${{ secrets.MY_TOKEN }}
        with:
          tag_name: ${{ github.ref }}
          release_name: Release ${{ github.ref }}

      - name: Upload Release APK
        id: upload_release_asset
        uses: actions/upload-release-asset@v1.0.1
        env:
          GITHUB_TOKEN: ${{ secrets.MY_TOKEN }}
        with:
          upload_url: ${{ steps.create_release.outputs.upload_url }}
          asset_path: TajCICD/app-debug.apk
          asset_name: TajCICD.apk
          asset_content_type: application/zip

  firebase-deploy:
    name:  Deploy to Firebase App Distribution
    needs: [ generate-apk ]
    runs-on: ubuntu-latest
    steps:
      - name: Checkout Code
        uses: actions/checkout@v1

      - name: Download APK from build
        uses: actions/download-artifact@v1
        with:
          name: TajCICD

      - name: Upload Artifact to Firebase App Distribution
        uses: wzieba/Firebase-Distribution-Github-Action@v1.2.2
        with:
          appId: ${{secrets.FIREBASE_APP_ID}}
          token: ${{secrets.FIREBASE_TOKEN}}
          groups: testers
          file: TajCICD/app-debug.apk
